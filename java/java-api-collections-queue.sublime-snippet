<snippet>
  <content><![CDATA[
import java.util.*;


public class ${1:App} {
    public static void main(String[] args) {
        (new CollectionDemo()).demo();
    }
}

class CollectionDemo {
    // Queue
    public void demo() {
        Queue<String> q = new LinkedList<String>();

        // Adding elements to the Queue
        q.add("A");
        q.add("B");
        q.add("C");
        q.add("D");
        q.add("E");
        q.add("F");
        q.add("G");
        q.add("H");

        System.out.println("Elements in Queue: " + q);

        /*
         * We can remove element from Queue using remove() method,
         * this would remove the first element from the Queue
         */
        System.out.println("Removed element: " + q.remove());

        /*
         * element() method - this returns the head of the
         * Queue. Head is the first element of Queue
         */
        System.out.println("Head: " + q.element());

        /*
         * poll() method - this removes and returns the
         * head of the Queue. Returns null if the Queue is empty
         */
        System.out.println("Poll(): " + q.poll());

        /*
         * peek() method - it works same as element() method,
         * however it returns null if the Queue is empty
         */
        System.out.println("Peek(): " + q.peek());

        // map size
        System.out.println("Queue size: " + q.size());

        System.out.println("Elements in Queue: " + q);

        while (q.size() != 0) {
            System.out.println("Process: " + q.poll());
        }
    }
}
]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>clivern-java-api-collections-queue</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.java</scope>
</snippet>
