<snippet>
  <content><![CDATA[
################
# Sync From Sync
################
import time


def sum(x, y):
    print("Sum {} & {} started".format(x, y))
    time.sleep(2)
    print("Sum {} & {} finished".format(x, y))
    return x + y


def main():
    result1 = sum(1, 2)
    result2 = sum(3, 4)
    print("Result1: {}".format(result1))
    print("Result2: {}".format(result2))


if __name__ == "__main__":
    start_time = time.time()
    main()
    print("--- %s seconds ---" % (time.time() - start_time))

    # Sum 1 & 2 started
    # Sum 1 & 2 finished
    # Sum 3 & 4 started
    # Sum 3 & 4 finished
    # Result1: 3
    # Result2: 7
    # --- 4.007953882217407 seconds ---


################
# Async From Async
################
import asyncio
import time

async def sum(x, y):
    print("Sum {} & {} started".format(x, y))
    await asyncio.sleep(2)
    print("Sum {} & {} finished".format(x, y))
    return x + y


async def main():
    task1 = asyncio.create_task(
        sum(1, 2))
    task2 = asyncio.create_task(
        sum(3, 4))

    result1 = await task1
    result2 = await task2
    print("Result1: {}".format(result1))
    print("Result2: {}".format(result2))


if __name__ == "__main__":
    start_time = time.time()
    asyncio.run(main())
    print("--- %s seconds ---" % (time.time() - start_time))

    # Sum 1 & 2 started
    # Sum 3 & 4 started
    # Sum 1 & 2 finished
    # Sum 3 & 4 finished
    # Result1: 3
    # Result2: 7
    # --- 2.004023790359497 seconds ---



################
# Sync From Async
################
import time
import asyncio

async def sum(x, y):
    print("Sum {} & {} started".format(x, y))
    await asyncio.sleep(2)
    print("Sum {} & {} finished".format(x, y))
    return x + y

def sync_sum(x, y):
    print("Sum {} & {} started".format(x, y))
    time.sleep(2)
    print("Sum {} & {} finished".format(x, y))
    return x + y

async def main():
    task1 = asyncio.create_task(
        sum(1, 2))
    task2 = asyncio.create_task(
        sum(3, 4))

    result1 = await task1
    result2 = await task2
    result3 = sync_sum(5, 7)

    print("Result 1: {}".format(result1))
    print("Result 2: {}".format(result2))
    print("Result 3: {}".format(result3))


if __name__ == "__main__":
    start_time = time.time()
    asyncio.run(main())
    print("--- %s seconds ---" % (time.time() - start_time))

    # Sum 1 & 2 started
    # Sum 3 & 4 started
    # Sum 1 & 2 finished
    # Sum 3 & 4 finished
    # Sum 5 & 7 started
    # Sum 5 & 7 finished
    # Result 1: 3
    # Result 2: 7
    # Result 3: 12
    # --- 4.007720232009888 seconds ---

]]></content>
    <!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
    <tabTrigger>clivern-python-async</tabTrigger>
    <!-- Optional: Set a scope to limit where the snippet will trigger -->
    <scope>source.python</scope>
</snippet>
